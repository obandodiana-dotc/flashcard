<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Plan de 1 Mes para Aprender Alem√°n (A1) ‚ú® - D√≠a a D√≠a</title>

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">

    <style>
        :root {
            --pink-500: #ec4899;
            --pink-200: #fbcfe8;
            --pink-50: #fdf2f8;
            --grad-from: #f472b6;
            --grad-to: #a855f7;
        }
        body { font-family: 'Inter', sans-serif; background: #f8fafc; }
        .font-display { font-family: 'Dancing Script', cursive; }
        .stat-card {
            background: rgba(255, 255, 255, 0.2); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        .checkbox-wrap { position: relative; padding-left: 2.1rem; display: inline-flex; align-items: center; cursor: pointer; }
        .checkbox-wrap input[type="checkbox"] { position: absolute; left: 0; top: 0.12rem; width: 1.25rem; height: 1.25rem; opacity: 0; }
        .checkbox-box {
            position: absolute; left: 0; top: 0.12rem; width: 1.25rem; height: 1.25rem;
            border: 2px solid var(--pink-200); border-radius: .25rem; display: inline-flex; align-items:center; justify-content:center;
            transition: all .18s; background: white;
        }
        .checkbox-box .tick { font-size: 1rem; color: white; opacity: 0; transition: opacity .15s; line-height: 1; }
        input[type="checkbox"]:checked + .checkbox-box { background: var(--pink-500); border-color: var(--pink-500); }
        input[type="checkbox"]:checked + .checkbox-box .tick { opacity: 1; }
        .task-done { text-decoration: line-through; color: #6b7280; }
        .modal { transition: opacity .25s, transform .25s; }
        @keyframes shake {
            0%, 100% { transform: translateX(0); } 25% { transform: translateX(-5px); } 75% { transform: translateX(5px); }
        }
        .shake-anim { animation: shake 0.3s ease-in-out; }
        .nav-btn:disabled { opacity: 0.5; cursor: not-allowed; }
        
        /* Estilos de Pesta√±as y Contenido */
        .tab-button.active {
            background-color: white; color: var(--pink-500); font-weight: 600; border-bottom-color: white;
        }
        .tab-button {
            background-color: #f3f4f6; border-color: #e5e7eb; transition: background-color 0.15s; border-bottom: 2px solid var(--pink-500);
            flex: 1 1 0%; text-align: center;
        }
        .lesson-content h3 { font-size: 1.25rem; font-weight: 600; margin-top: 1rem; margin-bottom: 0.5rem; color: #a855f7; }
        .lesson-content strong { font-weight: 700; color: #ec4899; }
        .lesson-content p { margin-bottom: 0.75rem; line-height: 1.5; }
        
        /* Adaptaciones Adicionales para M√≥vil */
        #reminderList { max-height: 200px; overflow-y: auto; }
        .modal { max-width: 90%; }
        /* Para evitar el colapso de los botones del modal en m√≥viles */
        #answerView .control-group { 
            display: flex; 
            flex-direction: column; 
            gap: 10px; 
        }
        @media (min-width: 640px) { /* sm breakpoint */
            #answerView .control-group { 
                flex-direction: row; 
                justify-content: space-between;
                align-items: center;
            }
        }
    </style>
</head>
<body class="min-h-screen">

    <header class="bg-gradient-to-r from-[var(--grad-from)] to-[var(--grad-to)] text-white p-6 shadow-lg">
        <div class="max-w-4xl mx-auto">
            <div class="flex justify-between items-center mb-6">
                <div class="flex-1 text-left">
                    <h1 class="text-3xl font-display leading-tight">Tu Plan de Alem√°n</h1>
                    <p class="text-sm opacity-90">(Nivel A1)</p>
                </div>
                <button id="openReminderModalBtn" class="p-2 ml-4 rounded-full hover:bg-white/20 transition flex-shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" /></svg>
                </button>
            </div>
            
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
                <div class="stat-card rounded-xl p-4 flex items-center gap-4">
                    <div class="p-2 bg-white/30 rounded-lg"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5" /></svg></div>
                    <div><span class="text-xs opacity-80">D√≠a del Plan</span><div id="headerDayDisplay" class="text-xl font-bold">D√≠a 1 / 30</div></div>
                </div>
                <div class="stat-card rounded-xl p-4 flex items-center gap-4">
                    <div class="p-2 bg-white/30 rounded-lg"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z" /><path stroke-linecap="round" stroke-linejoin="round" d="M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z" /></svg></div>
                    <div><span class="text-xs opacity-80">Racha Actual</span><div id="streak" class="text-xl font-bold">0 D√≠as üî•</div></div>
                </div>
                <div class="stat-card rounded-xl p-4">
                    <div class="flex justify-between items-center mb-2"><span class="text-xs opacity-80">Progreso Total</span><span id="progressPercent" class="text-xl font-bold">0%</span></div>
                    <div class="w-full bg-white/30 rounded-full h-2"><div id="progressBar" class="bg-white h-2 rounded-full transition-all duration-300" style="width: 0%"></div></div>
                </div>
            </div>
        </div>
    </header>

    <div class="max-w-4xl mx-auto p-4 sm:p-6">
        
        <section id="openWordOfDayCard" class="bg-white rounded-xl p-4 shadow-sm mb-6 cursor-pointer hover:shadow-lg transition">
            <h2 id="wodTitle" class="font-semibold text-gray-700 mb-2 text-sm">Wort des Tages (Palabra del D√≠a)</h2>
            <div class="flex justify-between items-end">
                <div><h3 id="wodWord" class="text-2xl sm:text-3xl font-bold text-gray-900">die Woche</h3><p id="wodPlural" class="text-sm text-gray-500 mt-1">Plural: die Wochen</p></div>
                <span id="wodTranslation" class="text-base sm:text-lg font-semibold text-pink-600">la semana</span>
            </div>
        </section>

        <div class="flex flex-col md:flex-row items-center justify-between gap-4 mb-4">
            <div class="flex items-center gap-3 w-full md:w-auto">
                <select id="jumpDay" class="rounded-md px-3 py-2 bg-white shadow-sm text-sm border border-gray-200 w-full"><option value="">Ir a d√≠a...</option></select>
                <button id="goDay" class="px-3 py-2 rounded-md bg-pink-100 text-pink-700 text-sm flex-shrink-0">Ir</button>
            </div>
            <button id="resetProgress" class="px-3 py-2 rounded-md bg-white shadow-sm text-sm text-red-600 border border-gray-200 w-full md:w-auto">Reset progreso</button>
        </div>

        <div class="flex justify-between items-center mb-4 p-3 bg-white rounded-lg shadow-sm border border-gray-200">
            <button id="prevDayBtn" class="nav-btn px-3 py-2 rounded-md bg-gray-100 hover:bg-gray-200 text-xs sm:text-sm flex-1 mr-2">&lt; D√≠a Anterior</button>
            <div id="currentDayDisplay" class="text-base sm:text-lg font-semibold text-pink-600 text-center flex-1 mx-2">D√≠a X / 30</div>
            <button id="nextDayBtn" class="nav-btn px-3 py-2 rounded-md bg-gray-100 hover:bg-gray-200 text-xs sm:text-sm flex-1 ml-2">D√≠a Siguiente &gt;</button>
        </div>

        <main id="daysContainer" class="mb-8"></main> 
        
        <section class="bg-white rounded-2xl p-4 shadow-sm border border-gray-200">
            <div class="flex flex-wrap items-center justify-between mb-3 gap-2">
                <h2 class="font-semibold text-lg text-pink-600">üìù Diario (D√≠a <span id="journalCurrentDay">1</span>)</h2>
                <div class="flex items-center gap-2 flex-shrink-0">
                    <label for="journalDay" class="text-sm text-gray-600">D√≠a:</label>
                    <select id="journalDay" class="rounded-md px-2 py-1 bg-gray-50 border border-gray-200 text-sm"></select>
                </div>
            </div>
            <textarea id="journalText" rows="6" class="journal-textarea w-full p-3 rounded-md border border-gray-200 bg-white" placeholder="Escribe tus frases..."></textarea>
            
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3 mt-3">
                <p id="autosaveNotice" class="text-xs text-gray-500 order-last sm:order-first w-full sm:w-auto">Guardado autom√°tico activo.</p>
                <div class="flex gap-2 justify-end w-full sm:w-auto flex-wrap">
                    <button id="saveJournal" class="flex-1 min-w-[45%] sm:min-w-0 px-3 py-2 rounded-md bg-pink-600 text-white text-sm">Guardar</button>
                    <button id="exportState" class="flex-1 min-w-[45%] sm:min-w-0 px-3 py-2 rounded-md bg-white text-sm shadow-sm border border-gray-200">Exportar</button>
                    <button id="importStateBtn" class="flex-1 min-w-[45%] sm:min-w-0 px-3 py-2 rounded-md bg-white text-sm shadow-sm border border-gray-200">Importar</button>
                    <input id="importFile" type="file" accept="application/json" class="hidden">
                </div>
            </div>
        </section>
    </div>

    <div id="modalBackdrop" class="fixed inset-0 bg-black/40 hidden items-center justify-center z-40 p-4">
        <div id="modal" class="modal bg-white rounded-2xl p-6 max-w-lg w-full shadow-lg transform">
            <h3 id="modalTitle" class="text-xl font-semibold text-pink-600 mb-4"></h3>
            
            <div id="preTestView" class="hidden">
                <p class="text-gray-700 mb-4 text-sm">¬°Bienvenido! Antes de empezar, completa este test r√°pido (5 preguntas) para verificar tu nivel. Podr√≠as saltarte los primeros d√≠as.</p>
                <div id="preTestContainer" class="space-y-4 max-h-96 overflow-y-auto pr-1">
                    </div>
                <div id="preTestFeedback" class="text-sm text-red-500 my-3 h-4"></div>
                <button id="submitPreTestBtn" class="w-full px-4 py-3 rounded-md bg-pink-600 text-white mt-4 hover:bg-pink-700 transition">Comenzar Plan</button>
            </div>

            <div id="quizView" class="hidden">
                <p id="quizQuestion" class="text-gray-700 mb-4 text-lg">¬øC√≥mo se dice...? <strong id="quizWordTrans"></strong></p>
                <input id="quizInput" type="text" class="w-full p-2 border border-gray-300 rounded-md mb-3" placeholder="Escribe en alem√°n...">
                <div id="quizFeedback" class="text-sm text-red-500 mb-3 h-4"></div>
                <div class="flex justify-between">
                    <button id="revealAnswerBtn" class="px-3 py-2 rounded-md bg-gray-100 text-sm">Revelar</button>
                    <button id="checkAnswerBtn" class="px-4 py-2 rounded-md bg-pink-600 text-white">Comprobar</button>
                </div>
            </div>
            
            <div id="answerView" class="hidden">
                <p id="modalMessage" class="text-gray-700 mb-4"></p>
                <div class="mb-4 p-3 bg-gray-50 rounded-md border border-gray-200">
                    <p class="text-sm text-gray-600 font-medium">Ejemplo:</p>
                    <p id="modalExampleSentence" class="text-sm text-gray-800 italic"></p>
                    <p id="modalExampleTranslation" class="text-xs text-gray-500 italic mt-1"></p>
                </div>
                <div id="modalExample" class="text-sm text-gray-500 mb-4"></div> 
                
                <div class="control-group">
                    <div class="flex gap-2">
                        <button id="listenWordBtn" class="px-3 py-2 rounded-md bg-blue-100 text-blue-700 text-sm">üó£Ô∏è Palabra</button>
                        <button id="listenExampleBtn" class="px-3 py-2 rounded-md bg-blue-100 text-blue-700 text-sm">üó£Ô∏è Ejemplo</button>
                    </div>
                    <div class="flex gap-2 w-full sm:w-auto">
                        <button id="prevWord" class="px-3 py-2 rounded-md bg-gray-100 text-sm flex-1">Anterior</button>
                        <button id="nextWord" class="px-3 py-2 rounded-md bg-gray-100 text-sm flex-1">Siguiente</button>
                        <button id="closeModal" class="px-4 py-2 rounded-md bg-pink-600 text-white text-sm flex-1">Cerrar</button>
                    </div>
                </div>
            </div>

            <div id="greetingView" class="hidden">
                <p id="greetingMessage" class="text-gray-700 mb-4 text-lg"></p><button id="closeGreetingBtn" class="w-full px-4 py-2 rounded-md bg-pink-600 text-white">¬°Vamos!</button>
            </div>

            <div id="reminderView" class="hidden">
                <p class="text-gray-700 mb-4 text-sm">Crea una nota r√°pida o un recordatorio (solo local):</p>
                <textarea id="reminderInput" rows="3" class="w-full p-2 border border-gray-300 rounded-md mb-3" placeholder="Ej: Repasar los art√≠culos del D√çA 9 ma√±ana"></textarea>
                <button id="addReminderBtn" class="px-3 py-2 rounded-md bg-pink-600 text-white text-sm mb-4 w-full font-medium hover:bg-pink-700 transition">A√±adir Nota</button>
                <h4 class="font-semibold text-gray-700 mb-2 border-t pt-3">Mis Notas:</h4>
                <ul id="reminderList" class="space-y-2 max-h-40 overflow-y-auto pr-1"> 
                    <li class="text-gray-500 italic text-sm">No hay notas guardadas.</li>
                </ul>
                <button id="closeReminderModal" class="mt-4 w-full px-4 py-2 rounded-md bg-gray-200 text-gray-700 text-sm hover:bg-gray-300 transition">Cerrar</button>
            </div>

            <div id="confidenceView" class="hidden text-center">
                <p class="text-gray-700 mb-6 text-lg font-medium">¬øQu√© tan seguro/a est√°s de haber dominado esta tarea?</p>
                <div class="flex justify-around items-center gap-4">
                    <button data-level="1" class="confidence-btn p-3 rounded-full text-4xl sm:text-5xl bg-red-100 border border-red-300">üôÅ</button>
                    <button data-level="2" class="confidence-btn p-3 rounded-full text-4xl sm:text-5xl bg-yellow-100 border border-yellow-300">üòê</button>
                    <button data-level="3" class="confidence-btn p-3 rounded-full text-4xl sm:text-5xl bg-green-100 border border-green-300">üòÑ</button>
                </div>
                <p class="text-sm text-gray-500 mt-2">Baja (1) - Media (2) - Alta (3)</p>
                <p class="text-xs text-pink-600 mt-4 font-medium">Las tareas con confianza baja ser√°n priorizadas en futuros repasos.</p>
            </div>

        </div>
    </div>

    <template id="day-template">
        <article class="bg-white rounded-2xl p-4 shadow-sm border border-gray-200">
            <header class="flex flex-col md:flex-row items-start md:items-center justify-between">
                <div>
                    <h3 class="text-lg font-semibold text-pink-600 day-title">üìÖ D√≠a X: T√≠tulo</h3>
                    <p class="text-xs text-gray-500 day-word">Palabra clave: <strong>palabra</strong></p>
                </div>
                <div class="flex items-center gap-2 mt-2 md:mt-0">
                    <div class="text-sm text-gray-600 mr-2 day-status"></div>
                </div>
            </header>
            
            <div class="mt-3 border-b border-gray-200">
                <div class="flex">
                    <button data-tab="lesson" class="tab-button px-4 py-2 text-sm text-gray-600 rounded-t-lg border border-b-0 border-gray-200 -mb-px active">
                        Clase del D√≠a üìñ
                    </button>
                    <button data-tab="tasks" class="tab-button px-4 py-2 text-sm text-gray-600 rounded-t-lg border border-b-0 border-gray-200 -mb-px ml-1">
                        Pr√°ctica y Tareas ‚úÖ
                    </button>
                </div>
            </div>

            <div class="tab-content lesson-tab pt-4 lesson-content">
            </div>
            
            <div class="tab-content tasks-tab pt-4 hidden">
                <div class="day-content open">
                    <ul class="space-y-2 task-list"></ul>
                    <button class="mt-3 px-3 py-2 bg-pink-100 text-pink-700 rounded-md text-sm journal-focus-btn">Escribir en el diario de este d√≠a</button>
                </div>
            </div>

        </article>
    </template>
    <template id="task-template">
        <li class="flex items-start gap-3 p-3 rounded-lg task-item">
            <label class="checkbox-wrap w-full">
                <input type="checkbox" class="task-checkbox">
                <span class="checkbox-box"><span class="tick">‚úì</span></span>
                <span class="ml-3 text-sm task-label">
                    <span class="task-icon">üß†</span>
                    <span class="task-desc">Descripci√≥n de la tarea</span>
                    <span class="text-xs text-gray-500 task-time">(20 min)</span>
                </span>
            </label>
        </li>
    </template>

    <script>
        // (Contenido del script mantenido - la l√≥gica funciona correctamente)
        (function() {
            // DATOS (PLAN_DIARIO, PRE_TEST_QUESTIONS)
            const PRE_TEST_QUESTIONS = [
                { id: 1, question: "¬øC√≥mo se dice 'Yo soy espa√±ol'?", options: ['Ich habe Spanier', 'Ich bin Spanier', 'Du bist Spanier', 'Er ist Spanier'], answer: 'Ich bin Spanier' },
                { id: 2, question: "¬øCu√°l es el art√≠culo para 'Mesa' (*Tisch*)?", options: ['Die', 'Der', 'Das', 'Den'], answer: 'Der' },
                { id: 3, question: "¬øC√≥mo se pregunta '¬øDe d√≥nde viene usted?' (Formal)?", options: ['Wie hei√üt Sie?', 'Was machen Sie?', 'Woher kommen Sie?', 'Wo wohnst du?'], answer: 'Woher kommen Sie?' },
                { id: 4, question: "El plural de 'El coche' (*Das Auto*) es...", options: ['Die Autos', 'Die Auten', 'Die Autosse', 'Der Auto'], answer: 'Die Autos' },
                { id: 5, question: "La conjugaci√≥n correcta de *haben* (tener) para 'T√∫' (*Du*) es...", options: ['Du habe', 'Du hast', 'Du hat', 'Du haben'], answer: 'Du hast' },
            ];
            
            // Se asume que PLAN_DIARIO es una lista de 30 elementos v√°lida...
            const PLAN_DIARIO = [/* ... tus 30 d√≠as de datos ... */
                { day: 1, word: 'Hallo', wordTrans: 'Hola', plural: 'Hallo', title: 'Saludos y Presentaciones', journalPrompt: 'Escribe 3 frases present√°ndote.', exampleSentence: 'Hallo, wie geht es Ihnen?', exampleTranslation: 'Hola, ¬øc√≥mo est√° usted?', learningGoals: ["Saludar y despedirse formal e informalmente.", "Presentarse (nombre).", "Preguntar '¬øC√≥mo est√°s?' y responder."], lessonContent: `<h3>Saludos B√°sicos (Gr√º√üe)</h3><p>La forma m√°s com√∫n y vers√°til de saludar es <strong>Hallo</strong> (Hola). Para ser m√°s espec√≠fico con el tiempo del d√≠a:</p><ul><li><strong>Guten Morgen!</strong> (Buenos d√≠as - hasta el mediod√≠a)</li><li><strong>Guten Tag!</strong> (Buen d√≠a - de mediod√≠a a tarde, el m√°s neutral)</li><li><strong>Guten Abend!</strong> (Buenas tardes/noches - a partir de las 6 PM)</li></ul><h3>Presentaciones y Formas de Cortes√≠a</h3><p>En alem√°n, la cortes√≠a es clave. Usamos <strong>Sie</strong> (Usted, formal) y <strong>du</strong> (t√∫, informal).</p><p>Para preguntar el nombre:</p><ul><li>Formal: <strong>Wie hei√üen Sie?</strong> (¬øC√≥mo se llama Usted?)</li><li>Informal: <strong>Wie hei√üt du?</strong> (¬øC√≥mo te llamas t√∫?)</li></ul><p>Para responder: <strong>Ich hei√üe [Tu Nombre].</strong> (Yo me llamo [Tu Nombre]).</p>`, tasks: [ { id:'d1-t1', icon:'üß†', color:'bg-pink-50', desc:'Vocabulario: Aprende 5 saludos y 3 despedidas.', time:'20 min' }, { id:'d1-t2', icon:'üéß', color:'bg-purple-50', desc:'Escucha un di√°logo "Hallo, wie geht\'s?" y repite.', time:'15 min' }, { id:'d1-t3', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 3 mini-di√°logos present√°ndote.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 2, word: 'die Woche', wordTrans: 'la semana', plural: 'die Wochen', title: 'Formal (Sie) vs. Informal (du)', journalPrompt: 'Escribe 2 frases formales y 2 informales.', exampleSentence: 'Diese Woche habe ich viel Arbeit.', exampleTranslation: 'Esta semana tengo mucho trabajo.', learningGoals: ["Diferenciar entre tratamiento formal (Sie) e informal (du).", "Usar las formas correctas al preguntar el nombre."], lessonContent: `<h3>El Dilema Sie vs. Du</h3><p>La elecci√≥n entre <strong>Sie (Usted)</strong> y <strong>du (t√∫)</strong> es crucial en Alemania. El error m√°s com√∫n de los principiantes es usar "du" con desconocidos o personas mayores.</p><ul><li><strong>Sie:</strong> Se usa con desconocidos, clientes, jefes, profesores y personas mayores (salvo que ellos te ofrezcan usar "du"). Siempre va con may√∫scula inicial.</li><li><strong>du:</strong> Se usa con amigos, familia, ni√±os y adolescentes, o si te lo han ofrecido expl√≠citamente ("Wir k√∂nnen uns duzen" / "Podemos tutearnos").</li></ul><h3>La Palabra del D√≠a: die Woche</h3><p>La palabra <strong>die Woche</strong> (la semana) es femenina, por lo que usa el art√≠culo femenino <strong>die</strong>. Su plural es <strong>die Wochen</strong>.</p><p>Aprender la palabra con el art√≠culo es vital: <strong>die Woche, die Wochen</strong>.</p>`, tasks: [ { id:'d2-t1', icon:'üß†', color:'bg-pink-50', desc:'Gram√°tica: Entiende la diferencia entre "Sie" (formal) y "du" (informal).', time:'15 min' }, { id:'d2-t2', icon:'üìñ', color:'bg-yellow-50', desc:'Lee ejemplos de "Wie hei√üen Sie?" vs. "Wie hei√üt du?".', time:'15 min' }, { id:'d2-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Practica presentarte de ambas formas en voz alta.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 3, word: 'sein', wordTrans: 'ser/estar', title: 'El Verbo "sein" (Ser/Estar)', journalPrompt: 'Escribe una frase con cada conjugaci√≥n de "sein".', exampleSentence: 'Ich bin m√ºde.', exampleTranslation: 'Estoy cansado/a.', learningGoals: ["Conjugar el verbo 'sein' (ser/estar) en presente.", "Formar frases b√°sicas usando 'sein' (nacionalidad, profesi√≥n, estado)."], lessonContent: `<h3>El Verbo Irregular m√°s Importante: sein</h3><p><strong>Sein</strong> (ser/estar) es irregular y fundamental. Debes memorizar estas conjugaciones, ya que se usa constantemente para indicar identidad, estado y ubicaci√≥n.</p><div class="p-3 bg-red-50 rounded-md font-mono text-sm"><p>Ich <strong>bin</strong> (Yo soy/estoy)</p><p>Du <strong>bist</strong> (T√∫ eres/est√°s)</p><p>Er/Sie/Es <strong>ist</strong> (√âl/Ella/Ello es/est√°)</p><p>Wir <strong>sind</strong> (Nosotros somos/estamos)</p><p>Ihr <strong>seid</strong> (Vosotros sois/est√°is)</p><p>Sie/sie <strong>sind</strong> (Usted/Ellos son/est√°n)</p></div><h3>Ejemplos de Uso</h3><ul><li>Nacionalidad: "Ich <strong>bin</strong> Spanier."</li><li>Estado: "Er <strong>ist</strong> gl√ºcklich."</li><li>Profesi√≥n: "Wir <strong>sind</strong> Studenten."</li></ul>`, tasks: [ { id:'d3-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Conjuga "sein" (ich bin, du bist, er/sie/es ist...).', time:'20 min' }, { id:'d3-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 frases usando "sein" (Ej: Ich bin m√ºde, Du bist nett).', time:'20 min' }, { id:'d3-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Di las conjugaciones de "sein" en voz alta 10 veces.', time:'10 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 4, word: 'haben', wordTrans: 'tener', title: 'El Verbo "haben" (Tener)', journalPrompt: 'Escribe 5 cosas que tienes.', exampleSentence: 'Wir haben Hunger.', exampleTranslation: 'Tenemos hambre.', learningGoals: ["Conjugar el verbo 'haben' (tener) en presente.", "Formar frases b√°sicas usando 'haben' (posesi√≥n, edad, sensaciones)."], lessonContent: `<h3>Conjugando el Verbo: haben</h3><p><strong>Haben</strong> (tener) tambi√©n es irregular, pero se usa para posesi√≥n y algunas expresiones de estado (como tener hambre o sed).</p><div class="p-3 bg-red-50 rounded-md font-mono text-sm"><p>Ich <strong>habe</strong> (Yo tengo)</p><p>Du <strong>hast</strong> (T√∫ tienes)</p><p>Er/Sie/Es <strong>hat</strong> (√âl/Ella/Ello tiene)</p><p>Wir <strong>haben</strong> (Nosotros tenemos)</p><p>Ihr <strong>habt</strong> (Vosotros ten√©is)</p><p>Sie/sie <strong>haben</strong> (Usted/Ellos tienen)</p></div><h3>Importante: haben vs. sein</h3><p>En alem√°n, las sensaciones (hambre, sed, sue√±o) se expresan con <strong>haben</strong> (tener), no con <strong>sein</strong> (estar), a diferencia del espa√±ol.</p><ul><li>Tener hambre: Ich <strong>habe</strong> Hunger.</li><li>Tener 30 a√±os: Er <strong>hat</strong> drei√üig Jahre.</li></ul>`, tasks: [ { id:'d4-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Conjuga "haben" (ich habe, du hast, er/sie/es hat...).', time:'20 min' }, { id:'d4-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 frases con "haben" (Ej: Ich habe einen Hund, Du hast Hunger).', time:'20 min' }, { id:'d4-t3', icon:'üéß', color:'bg-pink-50', desc:'Escucha un audio que use "sein" y "haben".', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 5, word: 'Woher?', wordTrans: '¬øDe d√≥nde?', title: 'Preguntas (W-Fragen)', journalPrompt: 'Escribe 3 preguntas W y sus respuestas.', exampleSentence: 'Woher kommen Sie?', exampleTranslation: '¬øDe d√≥nde viene usted?', learningGoals: ["Identificar y usar las principales part√≠culas interrogativas (Wer, Was, Wo, Wie, Wann, Woher, etc.).", "Formular preguntas b√°sicas sobre informaci√≥n personal."], lessonContent: `<h3>Las Part√≠culas Interrogativas (W-Fragen)</h3><p>Las preguntas que no se responden con s√≠/no (como las de informaci√≥n personal) comienzan con una 'W'.</p><ul><li><strong>Wer?</strong> (¬øQui√©n?) Ejemplo: Wer ist das?</li><li><strong>Was?</strong> (¬øQu√©?) Ejemplo: Was machen Sie?</li><li><strong>Wo?</strong> (¬øD√≥nde?) Ejemplo: Wo wohnst du?</li><li><strong>Woher?</strong> (¬øDe d√≥nde?) Ejemplo: Woher kommen Sie?</li><li><strong>Wie?</strong> (¬øC√≥mo?) Ejemplo: Wie geht es dir?</li></ul><h3>Estructura Clave</h3><p>La regla de oro en alem√°n es que el verbo (la acci√≥n) siempre debe ir en la <strong>segunda posici√≥n</strong> de la oraci√≥n, incluso en las preguntas con W-Fragen:</p><p><strong>[W-Frage] + [Verbo conjugado] + [Sujeto/Complementos]</strong></p><p>Ejemplo: <strong>Wie</strong> <strong>hei√üen</strong> Sie? / <strong>Wo</strong> <strong>ist</strong> die Toilette?</p>`, tasks: [ { id:'d5-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende las "W-Fragen" (Wer, Was, Wo, Wie, Wann, Woher).', time:'20 min' }, { id:'d5-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe una pregunta con cada "W-Frage" (Ej: Wer bist t√∫? Wo wohnst du?).', time:'20 min' }, { id:'d5-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Practica preguntar y responder estas preguntas b√°sicas en voz alta.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 6, word: 'die Zahl', wordTrans: 'el N√∫mero', plural: 'die Zahlen', title: 'El Alfabeto y N√∫meros (0-20)', journalPrompt: 'Escribe tu edad y n√∫mero de tel√©fono.', exampleSentence: 'Meine Lieblingszahl ist sieben.', exampleTranslation: 'Mi n√∫mero favorito es el siete.', learningGoals: ["Reconocer y pronunciar el alfabeto alem√°n.", "Contar del 0 al 20."], lessonContent: `<h3>El Alfabeto Alem√°n (Das Alphabet)</h3><p>El alfabeto es similar al espa√±ol, pero tiene letras con di√©resis (√Ñ, √ñ, √ú) y la eszett (√ü).</p><p><strong>Puntos clave:</strong></p><ul><li>La letra V se pronuncia como "F" (Ej: Vater -> Fater).</li><li>La letra W se pronuncia como "V" (Ej: Woche -> Voche).</li><li>La letra Z se pronuncia como "Ts" (Ej: Zahl -> Tsal).</li></ul><h3>N√∫meros 0-20</h3><p>Es esencial memorizar los n√∫meros hasta el 12. A partir del 13, se forma como en ingl√©s: [Unidad] + [diez].</p><ul><li><strong>11:</strong> elf, <strong>12:</strong> zw√∂lf</li><li><strong>13:</strong> dreizehn, <strong>16:</strong> sechzehn (¬°Ojo! Pierde la 's')</li></ul>`, tasks: [ { id:'d6-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende los n√∫meros de 0 a 20.', time:'20 min' }, { id:'d6-t2', icon:'üéß', color:'bg-pink-50', desc:'Escucha una canci√≥n del alfabeto alem√°n y c√°ntala.', time:'15 min' }, { id:'d6-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Practica decir tu n√∫mero de tel√©fono y edad.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 7, word: 'Repaso', wordTrans: 'Revisi√≥n', title: 'Repaso Semana 1', journalPrompt: 'Escribe un p√°rrafo present√°ndote.', exampleSentence: 'Heute machen wir einen Repaso.', exampleTranslation: 'Hoy hacemos un repaso.', learningGoals: ["Consolidar saludos, presentaciones.", "Repasar conjugaciones de 'sein' y 'haben'.", "Practicar W-Fragen y n√∫meros b√°sicos."], lessonContent: `<p>Esta semana se centr√≥ en las bases de la comunicaci√≥n: presentarse, preguntar y responder informaci√≥n personal, y los dos verbos m√°s importantes: <strong>sein</strong> (ser/estar) y <strong>haben</strong> (tener).</p><h3>Autoevaluaci√≥n R√°pida</h3><p>Intenta conjugar 'sein' y 'haben' para 'Ich', 'Du', 'Er/Sie/Es' de memoria. Si lo logras, est√°s listo para la siguiente semana.</p>`, tasks: [ { id:'d7-t1', icon:'üìñ', color:'bg-yellow-50', desc:'Lee un di√°logo corto (A1) e identifica saludos, "sein", "haben".', time:'20 min' }, { id:'d7-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe un p√°rrafo corto (3-5 frases) present√°ndote.', time:'20 min' }, { id:'d7-t3', icon:'üß†', color:'bg-purple-50', desc:'Repasa vocabulario d√≠as 1-6 con flashcards.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 8, word: 'die Familie', wordTrans: 'la Familia', plural: 'die Familien', title: 'La Familia', journalPrompt: 'Describe a tu familia.', exampleSentence: 'Meine Familie wohnt in Spanien.', exampleTranslation: 'Mi familia vive en Espa√±a.', learningGoals: ["Nombrar a los miembros b√°sicos de la familia.", "Describir relaciones familiares simples."], lessonContent: `<h3>¬°Bienvenido al d√≠a 8!</h3><p>Aqu√≠ aprender√°s el vocabulario de la familia. Recuerda siempre aprender el sustantivo junto a su art√≠culo (der/die/das).</p>`, tasks: [ { id:'d8-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende los miembros de la familia.', time:'20 min' }, { id:'d8-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Dibuja tu √°rbol geneal√≥gico y etiqueta en alem√°n.', time:'20 min' }, { id:'d8-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Describe a tu familia en frases simples.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 9, word: 'der', wordTrans: 'el (masc.)', title: 'Art√≠culos: Nominativo', journalPrompt: 'Escribe 10 sustantivos con su art√≠culo.', exampleSentence: 'Der Stuhl ist alt.', exampleTranslation: 'La silla es vieja.', learningGoals: ["Identificar los 3 g√©neros gramaticales.", "Usar los art√≠culos definidos (der, die, das) en nominativo."], lessonContent: `<h3>Gram√°tica del d√≠a: El Nominativo y los Art√≠culos</h3><p>El nominativo es el caso del sujeto de la oraci√≥n. ¬°Recuerda que todos los sustantivos alemanes llevan may√∫scula inicial!</p><p>Masculino: <strong>Der</strong> Mann | Femenino: <strong>Die</strong> Frau | Neutro: <strong>Das</strong> Kind</p>`, tasks: [ { id:'d9-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Aprende los 3 g√©neros y art√≠culos.', time:'20 min' }, { id:'d9-t2', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende 10 sustantivos CON su art√≠culo.', time:'15 min' }, { id:'d9-t3', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Haz una lista de 5 objetos y busca su g√©nero/art√≠culo.', time:'20 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 10, word: 'den', wordTrans: 'el (masc. acus.)', title: 'Art√≠culos: Akkusativ', journalPrompt: 'Escribe 5 frases en Acusativo.', exampleSentence: 'Ich sehe den Mann.', exampleTranslation: 'Veo al hombre.', learningGoals: ["Comprender el caso acusativo.", "Aplicar el cambio der -> den."], lessonContent: `<h3>El Acusativo (Objeto Directo)</h3><p>El acusativo se usa para el objeto directo de la acci√≥n. Solo el art√≠culo masculino cambia: <strong>der</strong> se convierte en <strong>den</strong>.</p><p>Ejemplo: Ich habe <strong>einen</strong> Hund (masc. indefinito) | Ich sehe <strong>den</strong> Tisch (masc. definido).</p>`, tasks: [ { id:'d10-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Entiende el Akkusativ (objeto directo). "der" -> "den".', time:'20 min' }, { id:'d10-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 frases con "haben" + objeto directo.', time:'20 min' }, { id:'d10-t3', icon:'üìñ', color:'bg-yellow-50', desc:'Completa 10 ejercicios online de Nom vs Akk.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 11, word: 'ein', wordTrans: 'un', title: 'Art√≠culos Indefinidos', journalPrompt: 'Escribe 3 frases Nom. y 3 Akk.', exampleSentence: 'Das ist ein Tisch.', exampleTranslation: 'Esto es una mesa.', learningGoals: ["Usar art√≠culos indefinidos Nom/Akk.", "Reconocer los cambios en el acusativo."], lessonContent: `<h3>Art√≠culos Indefinidos: ein/eine</h3><p>En Nominativo son: ein (masc.), eine (fem.), ein (neutro). En Acusativo: **einen** (masc.), eine (fem.), ein (neutro).</p>`, tasks: [ { id:'d11-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Aprende \'ein\' (Nom) y \'einen\' (Akk).', time:'20 min' }, { id:'d11-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe frases: "Das ist ein..." vs. "Ich habe einen...".', time:'20 min' }, { id:'d11-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Se√±ala objetos y di "Das es un/eine...".', time:'10 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 12, word: 'mein', wordTrans: 'mi', title: 'Posesivos (mein, dein)', journalPrompt: 'Escribe 5 frases con posesivos.', exampleSentence: 'Mein Bruder hei√üt Peter.', exampleTranslation: 'Mi hermano se llama Peter.', learningGoals: ["Usar posesivos 'mein' y 'dein'.", "Declinar posesivos."], lessonContent: `<h3>Posesivos: mein y dein</h3><p>Los posesivos se declinan como los art√≠culos indefinidos. Si el sustantivo es femenino o plural, a√±aden '-e': mein/meine, dein/deine.</p>`, tasks: [ { id:'d12-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Aprende "mein/meine" y "dein/deine" en Nominativo.', time:'20 min' }, { id:'d12-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 frases sobre tu familia y cosas.', time:'20 min' }, { id:'d12-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Describe a tu familia usando posesivos.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 13, word: 'rot', wordTrans: 'rojo', title: 'Colores y Adjetivos B√°sicos', journalPrompt: 'Describe 5 objetos.', exampleSentence: 'Das Auto ist rot.', exampleTranslation: 'El coche es rojo.', learningGoals: ["Nombrar colores.", "Usar adjetivos b√°sicos."], lessonContent: `<h3>Describiendo el mundo: Colores</h3><p>Los colores se usan como en espa√±ol, pero van sin declinaci√≥n cuando act√∫an como predicado (despu√©s del verbo sein): Das Auto ist <strong>rot</strong>.</p>`, tasks: [ { id:'d1Next-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende 10 colores y 5 adjetivos.', time:'20 min' }, { id:'d13-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 frases describiendo objetos.', time:'20 min' }, { id:'d13-t3', icon:'üéß', color:'bg-pink-50', desc:'Escucha "Nicos Weg" (A1) e identifica adjetivos.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 14, word: 'das Zimmer', wordTrans: 'la Habitaci√≥n', plural: 'die Zimmer', title: 'Repaso Semana 2', journalPrompt: 'Describe tu habitaci√≥n.', exampleSentence: 'Mein Zimmer ist klein.', exampleTranslation: 'Mi habitaci√≥n es peque√±a.', learningGoals: ["Consolidar art√≠culos Nom/Akk.", "Practicar vocabulario y posesivos."], lessonContent: `<h3>Repaso de Art√≠culos y Casos</h3><p>Este d√≠a es para asegurar que las declinaciones de los art√≠culos definidos e indefinidos en Nominativo y Acusativo son claras. C√©ntrate en identificar el objeto directo.</p>`, tasks: [ { id:'d14-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Haz un mapa mental de Nom vs Akk.', time:'15 min' }, { id:'d14-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe un p√°rrafo describiendo tu habitaci√≥n.', time:'25 min' }, { id:'d14-t3', icon:'üìñ', color:'bg-yellow-50', desc:'Lee un texto A1 sobre una familia.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 15, word: 'lernen', wordTrans: 'aprender', title: 'Verbos Regulares', journalPrompt: 'Conjuga "lernen".', exampleSentence: 'Ich lerne Deutsch.', exampleTranslation: 'Aprendo alem√°n.', learningGoals: ["Conjugar verbos regulares.", "Usar la terminaci√≥n correcta seg√∫n el pronombre."], lessonContent: `<h3>La Regla de la Terminaci√≥n -en</h3><p>La mayor√≠a de verbos terminan en -en. Para conjugar, quita '-en' y a√±ade las terminaciones: -e, -st, -t, -en, -t, -en.</p>`, tasks: [ { id:'d15-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Aprende la conjugaci√≥n regular.', time:'20 min' }, { id:'d15-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Conjuga 3 verbos regulares.', time:'15 min' }, { id:'d15-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Crea frases orales simples.', time:'20 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 16, word: 'das Brot', wordTrans: 'el Pan', plural: 'die Brote', title: 'Comida y Bebida', journalPrompt: 'Lista 10 comidas.', exampleSentence: 'Ich esse gern Brot.', exampleTranslation: 'Me gusta comer pan.', learningGoals: ["Nombrar comidas y bebidas.", "Expresar gustos."], lessonContent: `<h3>Vocabulario: Essen und Trinken</h3><p>Aprende si los alimentos son der, die o das (por ejemplo, das Brot). Usa la estructura: Ich esse/trinke [sustantivo en acusativo].</p>`, tasks: [ { id:'d16-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende 15 comidas/bebidas.', time:'25 min' }, { id:'d16-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe tu lista de la compra.', time:'15 min' }, { id:'d16-t3', icon:'üéß', color:'bg-pink-50', desc:'Escucha un di√°logo en un supermercado.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 17, word: 'bitte', wordTrans: 'por favor', title: 'Ordenar en un Caf√©', journalPrompt: 'Di√°logo para pedir caf√©.', exampleSentence: 'Einen Kaffee, bitte.', exampleTranslation: 'Un caf√©, por favor.', learningGoals: ["Pedir comida/bebida.", "Pedir la cuenta."], lessonContent: `<h3>En la Cafeter√≠a</h3><p>La frase clave es: Ich h√§tte gern [art√≠culo + sustantivo]. Se utiliza el acusativo.</p>`, tasks: [ { id:'d17-t1', icon:'üß†', color:'bg-purple-50', desc:'Frases clave: "Ich h√§tte gern...", "Zahlen, bitte".', time:'20 min' }, { id:'d17-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe un di√°logo corto.', time:'20 min' }, { id:'d17-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Haz un "role-play".', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 18, word: 'aufstehen', wordTrans: 'levantarse', title: 'Verbos Separables', journalPrompt: '3 frases con verbos sep.', exampleSentence: 'Ich stehe um 7 Uhr auf.', exampleTranslation: 'Me levanto a las 7.', learningGoals: ["Identificar verbos separables.", "Estructura de frase con prefijos separables."], lessonContent: `<h3>¬°El Verbo se Separa!</h3><p>El prefijo del verbo (Ej: 'auf' de 'aufstehen') va al final de la frase. El verbo conjugado se queda en la segunda posici√≥n. Ejemplo: Ich <strong>stehe</strong> um sieben Uhr <strong>auf</strong>.</p>`, tasks: [ { id:'d18-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Entiende verbos separables.', time:'20 min' }, { id:'d18-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 3 frases.', time:'20 min' }, { id:'d18-t3', icon:'üìñ', color:'bg-yellow-50', desc:'Lee texto sobre rutina.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 19, word: 'die Uhr', wordTrans: 'la hora / el reloj', plural: 'die Uhren', title: 'La Hora', journalPrompt: 'Escribe 5 horas.', exampleSentence: 'Es ist drei Uhr.', exampleTranslation: 'Son las tres.', learningGoals: ["Preguntar la hora.", "Decir la hora (formal/informal)."], lessonContent: `<h3>Uhrzeit (La Hora)</h3><p>Formal: Se dice la hora y luego los minutos (Ej: Es ist zehn Uhr f√ºnfzehn). Informal: Usa 'nach' (pasadas) y 'vor' (para las...).</p>`, tasks: [ { id:'d19-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende a decir la hora.', time:'25 min' }, { id:'d19-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 horas diferentes.', time:'15 min' }, { id:'d19-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Pregunta y responde la hora.', time:'10 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 20, word: 'der Tag', wordTrans: 'el D√≠a', plural: 'die Tage', title: 'Rutina Diaria', journalPrompt: 'Describe tu ma√±ana.', exampleSentence: 'Heute ist ein sch√∂ner Tag.', exampleTranslation: 'Hoy es un d√≠a bonito.', learningGoals: ["Verbos de rutina diaria.", "Combinar verbos (separables) y la hora."], lessonContent: `<h3>Tagesablauf (Rutina)</h3><p>Usa los verbos separables de rutina (aufstehen, anrufen, fernsehen) y combina con preposiciones de tiempo (um 7 Uhr, am Morgen).</p>`, tasks: [ { id:'d20-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende verbos de rutina.', time:'20 min' }, { id:'d20-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5-7 frases sobre tu rutina.', time:'25 min' }, { id:'d20-t3', icon:'üéß', color:'bg-pink-50', desc:'Escucha descripci√≥n de rutina (A1).', time:'10 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 21, word: 'die Woche', wordTrans: 'la Semana', plural: 'die Wochen', title: 'Repaso Semana 3', journalPrompt: 'Escribe sobre tu d√≠a.', exampleSentence: 'Die Woche hat sieben Tage.', exampleTranslation: 'La semana tiene siete d√≠as.', learningGoals: ["Consolidar verbos reg/sep.", "Practicar vocabulario.", "Repasar la hora."], lessonContent: `<h3>Repaso de la Semana 3</h3><p>Conc√©ntrate en la diferencia entre verbos regulares e irregulares (sein, haben) y el orden de palabras con verbos separables.</p>`, tasks: [ { id:'d21-t1', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe un p√°rrafo sobre tu d√≠a.', time:'25 min' }, { id:'d21-t2', icon:'üìñ', color:'bg-yellow-50', desc:'Lee un men√∫ online.', time:'15 min' }, { id:'d21-t3', icon:'üß†', color:'bg-purple-50', desc:'Repasa los verbos.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 22, word: 'k√∂nnen', wordTrans: 'poder', title: 'Verbos Modales: k√∂nnen/wollen', journalPrompt: '3 cosas puedes/quieres.', exampleSentence: 'Ich kann Deutsch sprechen.', exampleTranslation: 'Puedo hablar alem√°n.', learningGoals: ["Conjugar k√∂nnen/wollen.", "Estructura frase modal."], lessonContent: `<h3>Verbos Modales (Parte 1)</h3><p>Los verbos modales se conjugan de forma irregular en singular. El verbo principal va <strong>al final</strong> en infinitivo. Ejemplo: Ich kann Tennis <strong>spielen</strong>.</p>`, tasks: [ { id:'d22-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Conjuga k√∂nnen/wollen.', time:'20 min' }, { id:'d22-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 3 frases con cada uno.', time:'20 min' }, { id:'d22-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Di 3 cosas puedes/quieres.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 23, word: 'm√ºssen', wordTrans: 'tener que', title: 'Verbos Modales: m√ºssen/m√∂chten', journalPrompt: '3 cosas tienes que/te gustar√≠a.', exampleSentence: 'Ich muss arbeiten.', exampleTranslation: 'Tengo que trabajar.', learningGoals: ["Conjugar m√ºssen/m√∂chten.", "Usar m√∂chten educadamente."], lessonContent: `<h3>Verbos Modales (Parte 2)</h3><p><strong>M√ºssen</strong> indica obligaci√≥n (tienes que). <strong>M√∂chten</strong> (forma educada de querer) es similar a 'quisiera'. Ambos env√≠an el verbo principal al final.</p>`, tasks: [ { id:'d23-t1', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Aprende m√ºssen/m√∂chten.', time:'20 min' }, { id:'d23-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 3 frases con cada uno.', time:'20 min' }, { id:'d23-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Practica usar m√∂chten.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 24, word: 'das Hobby', wordTrans: 'la Afici√≥n', plural: 'die Hobbys', title: 'Hobbies', journalPrompt: 'Escribe sobre hobbies.', exampleSentence: 'Mein Hobby ist Lesen.', exampleTranslation: 'Mi afici√≥n es leer.', learningGoals: ["Nombrar hobbies.", "Hablar sobre tiempo libre."], lessonContent: `<h3>Freizeit und Hobbies</h3><p>Combina verbos modales con el vocabulario de hobbies (schwimmen, lesen, tanzen) para formar frases complejas sobre lo que te gusta hacer.</p>`, tasks: [ { id:'d24-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende 10 hobbies.', time:'20 min' }, { id:'d24-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe sobre tus hobbies.', time:'20 min' }, { id:'d24-t3', icon:'üéß', color:'bg-pink-50', desc:'Escucha di√°logo sobre planes.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 25, word: 'der Montag', wordTrans: 'el Lunes', plural: 'die Montage', title: 'D√≠as y Meses', journalPrompt: '¬øQu√© haces 3 d√≠as?', exampleSentence: 'Am Montag beginnt die Woche.', exampleTranslation: 'El lunes empieza la semana.', learningGoals: ["Nombrar d√≠as/meses.", "Decir fechas b√°sicas."], lessonContent: `<h3>D√≠as de la Semana y Preposiciones</h3><p>Usa la preposici√≥n <strong>Am</strong> (en el) para los d√≠as de la semana: Am Montag, Am Wochenende.</p>`, tasks: [ { id:'d25-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende d√≠as/meses.', time:'20 min' }, { id:'d25-t2', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe qu√© haces en diferentes d√≠as.', time:'20 min' }, { id:'d25-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Di tu cumplea√±os.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 26, word: 'der Zug', wordTrans: 'el Tren', plural: 'die Z√ºge', title: 'Transporte', journalPrompt: '¬øC√≥mo vas a 3 lugares?', exampleSentence: 'Ich fahre mit dem Zug.', exampleTranslation: 'Voy en tren.', learningGoals: ["Nombrar transportes.", "Usar 'mit' + dativo."], lessonContent: `<h3>Medios de Transporte y el Dativo</h3><p>Para decir con qu√© viajas, usa la preposici√≥n <strong>mit</strong>. Mit siempre rige el caso Dativo. Ejemplos: mit dem Bus, mit der U-Bahn.</p>`, tasks: [ { id:'d26-t1', icon:'üß†', color:'bg-purple-50', desc:'Vocabulario: Aprende transportes.', time:'15 min' }, { id:'d26-t2', icon:'üß†', color:'bg-purple-50', desc:'Gram√°tica: Aprende "mit" + DATIVO.', time:'20 min' }, { id:'d26-t3', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe 5 frases.', time:'20 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 27, word: 'links', wordTrans: 'izquierda', title: 'Direcciones', journalPrompt: 'Pregunta por estaci√≥n.', exampleSentence: 'Gehen Sie links.', exampleTranslation: 'Vaya a la izquierda.', learningGoals: ["Preguntar direcciones.", "Dar/entender direcciones b√°sicas."], lessonContent: `<h3>Preguntando el camino</h3><p>Frases clave: Entschuldigung, wo ist [lugar]? Respuestas: Gehen Sie links/rechts/geradeaus (Vaya a la izquierda/derecha/recto).</p>`, tasks: [ { id:'d27-t1', icon:'üß†', color:'bg-purple-50', desc:'Frases clave: "Wo ist...?", links/rechts/geradeaus.', time:'20 min' }, { id:'d27-t2', icon:'üéß', color:'bg-pink-50', desc:'Escucha di√°logo de direcciones.', time:'20 min' }, { id:'d27-t3', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Practica dar direcciones.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 28, word: 'die E-Mail', wordTrans: 'el Correo', plural: 'die E-Mails', title: 'Repaso Semana 4', journalPrompt: 'Escribe email corto.', exampleSentence: 'Ich schreibe eine E-Mail.', exampleTranslation: 'Escribo un email.', learningGoals: ["Consolidar verbos modales.", "Practicar vocabulario.", "Repasar d√≠as/meses/direcciones."], lessonContent: `<h3>El Gran Repaso Modal</h3><p>Recuerda el orden de las palabras con verbos modales (el segundo verbo va al final) y aseg√∫rate de que conoces las conjugaciones irregulares.</p>`, tasks: [ { id:'d28-t1', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Escribe email corto proponiendo plan.', time:'25 min' }, { id:'d28-t2', icon:'üìñ', color:'bg-yellow-50', desc:'Lee blog A1 sobre viaje.', time:'15 min' }, { id:'d28-t3', icon:'üß†', color:'bg-purple-50', desc:'Haz test online modales A1.', time:'15 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 29, word: 'die Pr√ºfung', wordTrans: 'la Prueba', plural: 'die Pr√ºfungen', title: 'Gran Repaso: Escribir', journalPrompt: 'Escribe 10-15 frases sobre ti.', exampleSentence: 'Ich habe eine Pr√ºfung.', exampleTranslation: 'Tengo un examen.', learningGoals: ["Integrar todo lo aprendido.", "Autocorrecci√≥n."], lessonContent: `<h3>Producci√≥n Escrita</h3><p>Hoy es tu examen final de escritura A1. Conc√©ntrate en la estructura SVO (Sujeto-Verbo-Objeto) y la posici√≥n del verbo modal o separable. ¬°Demuestra todo lo que sabes!</p>`, tasks: [ { id:'d29-t1', icon:'‚úçÔ∏è', color:'bg-yellow-50', desc:'Reto: Escribe 10-15 frases sobre ti.', time:'30 min' }, { id:'d29-t2', icon:'üß†', color:'bg-purple-50', desc:'Revisa y corrige tu texto.', time:'20 min' } ] },
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† { day: 30, word: 'Super!', wordTrans: '¬°Genial!', title: 'Gran Repaso: Hablar', journalPrompt: 'Reflexiona aprendizaje.', exampleSentence: 'Das ist super!', exampleTranslation: '¬°Eso es genial!', learningGoals: ["Practicar expresi√≥n oral.", "Autoevaluar progreso."], lessonContent: `<h3>Pr√≥ximos Pasos</h3><p>¬°Felicidades, completaste A1! Usa tu audio del reto para practicar fluidez. Tu siguiente objetivo es A2, donde profundizar√°s en los casos (Dativo y Genitivo) y el uso de los tiempos pasados.</p>`, tasks: [ { id:'d30-t1', icon:'üó£Ô∏è', color:'bg-orange-50', desc:'Reto: Gr√°bate 1-2 min usando texto D√≠a 29.', time:'20 min' }, { id:'d30-t2', icon:'üéß', color:'bg-pink-50', desc:'Escucha tu audio y anota mejoras.', time:'15 min' }, { id:'d30-t3', icon:'üìà', color:'bg-purple-50', desc:'Planifica tu pr√≥ximo objetivo.', time:'15 min' } ] }
            ]; // Fin PLAN_DIARIO

            const STORAGE_KEY = 'germanA1_v4_gamification_v1';
            let state = { taskStatus: {}, journalEntries: {}, streak: 0, lastCompletedDay: null, startDate: null, lastLoginDate: null, reminders: [], preTestDone: false };
            let currentlyDisplayedDay = 1;
            let currentWordIndex = 0;
            let currentTaskForConfidence = null;
            let currentPreTestAnswers = {};
            
            // ... (resto de las declaraciones de variables y funciones JS, ya optimizadas y mantenidas) ...
            
            // Declaraci√≥n de variables globales para el DOM (reducida para concisi√≥n)
            let daysContainer, progressPercentEl, streakEl, resetProgressBtn, jumpDaySelect, goDayBtn, journalDaySelect, journalText, saveJournalBtn, autosaveNotice, exportStateBtn, importStateBtn, importFileInput, modalBackdrop, modal, modalTitle, quizView, answerView, greetingView, openWordOfDayBtn, quizWordTrans, quizInput, quizFeedback, checkAnswerBtn, revealAnswerBtn, modalMessage, modalExample, listenWordBtn, prevWordBtn, nextWordBtn, closeModalBtn, closeGreetingBtn, prevDayBtn, nextDayBtn, currentDayDisplay, journalCurrentDaySpan;
            let headerDayDisplay, progressBar, wodTitle, wodWord, wodPlural, wodTranslation;
            let dayTemplate, taskTemplate;
            let modalExampleSentence, modalExampleTranslation, listenExampleBtn;
            let openReminderModalBtn, reminderView, reminderInput, addReminderBtn, reminderList, closeReminderModal;
            let preTestView, preTestContainer, submitPreTestBtn, preTestFeedback, confidenceView;

            // Funciones DOM y L√≥gica (MANTENIDAS)
            function getElements() { /* ... implementaci√≥n ... */ 
                const ids = [
                    'daysContainer', 'progressPercent', 'streak', 'headerDayDisplay', 'progressBar', 'openWordOfDayCard',
                    'wodTitle', 'wodWord', 'wodPlural', 'wodTranslation', 'resetProgress', 'jumpDay', 'goDay',
                    'journalDay', 'journalText', 'saveJournal', 'autosaveNotice', 'exportState', 'importStateBtn',
                    'importFile', 'journalCurrentDay', 'modalBackdrop', 'modal', 'modalTitle', 'quizView', 'answerView',
                    'greetingView', 'quizWordTrans', 'quizInput', 'quizFeedback', 'checkAnswerBtn', 'revealAnswerBtn',
                    'modalMessage', 'modalExample', 'listenWordBtn', 'prevWord', 'nextWord', 'closeModal', 'closeGreetingBtn',
                    'modalExampleSentence', 'modalExampleTranslation', 'listenExampleBtn', 'prevDayBtn', 'nextDayBtn',
                    'currentDayDisplay', 'day-template', 'task-template', 'openReminderModalBtn', 'reminderView',
                    'reminderInput', 'addReminderBtn', 'reminderList', 'closeReminderModal',
                    'preTestView', 'preTestContainer', 'submitPreTestBtn', 'preTestFeedback', 'confidenceView'
                ];
                
                // Asignaci√≥n de referencias a variables globales
                ids.forEach(id => {
                    const el = document.getElementById(id);
                    window[id] = el;
                });
                
                daysContainer = window.daysContainer; progressPercentEl = window.progressPercent; streakEl = window.streak; headerDayDisplay = window.headerDayDisplay; progressBar = window.progressBar; openWordOfDayBtn = window.openWordOfDayCard; wodTitle = window.wodTitle; wodWord = window.wodWord; wodPlural = window.wodPlural; wodTranslation = window.wodTranslation; resetProgressBtn = window.resetProgress; jumpDaySelect = window.jumpDay; goDayBtn = window.goDay; journalDaySelect = window.journalDay; journalText = window.journalText; saveJournalBtn = window.saveJournal; autosaveNotice = window.autosaveNotice; exportStateBtn = window.exportState; importStateBtn = window.importStateBtn; importFileInput = window.importFile; journalCurrentDaySpan = window.journalCurrentDay; modalBackdrop = window.modalBackdrop; modal = window.modal; modalTitle = window.modalTitle; quizView = window.quizView; answerView = window.answerView; greetingView = window.greetingView; quizWordTrans = window.quizWordTrans; quizInput = window.quizInput; quizFeedback = window.quizFeedback; checkAnswerBtn = window.checkAnswerBtn; revealAnswerBtn = window.revealAnswerBtn; modalMessage = window.modalMessage; modalExample = window.modalExample; listenWordBtn = window.listenWordBtn; prevWordBtn = window.prevWord; nextWordBtn = window.nextWord; closeModalBtn = window.closeModal; closeGreetingBtn = window.closeGreetingBtn; modalExampleSentence = window.modalExampleSentence; modalExampleTranslation = window.modalExampleTranslation; listenExampleBtn = window.listenExampleBtn; prevDayBtn = window.prevDayBtn; nextDayBtn = window.nextDayBtn; currentDayDisplay = window.currentDayDisplay; openReminderModalBtn = window.openReminderModalBtn; reminderView = window.reminderView; reminderInput = window.reminderInput; addReminderBtn = window.addReminderBtn; reminderList = window.reminderList; closeReminderModal = window.closeReminderModal; preTestView = window.preTestView; preTestContainer = window.preTestContainer; submitPreTestBtn = window.submitPreTestBtn; preTestFeedback = window.preTestFeedback; confidenceView = window.confidenceView;
                dayTemplate = window['day-template'];
                taskTemplate = window['task-template'];
            }
            // Funciones de utilidad y l√≥gica de estado (loadState, saveState, computeProgress, handleTaskCompletion, etc.)
            function getTodayDateString() { return new Date().toISOString().split('T')[0]; }
            function getYesterdayDateString() { const y = new Date(); y.setDate(y.getDate() - 1); return y.toISOString().split('T')[0]; }
            function escapeHtml(str) {
                if (!str) return '';
                return String(str).replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;');
            }
            function loadState() {
                try {
                    const raw = localStorage.getItem(STORAGE_KEY);
                    if (raw) {
                        const parsed = JSON.parse(raw);
                        state = {...state, ...parsed};
                        
                        for (const taskId in state.taskStatus) {
                            if (typeof state.taskStatus[taskId] === 'boolean') {
                                state.taskStatus[taskId] = { done: state.taskStatus[taskId], confidence: state.taskStatus[taskId] ? 3 : 0 };
                            }
                        }
                        if (!state.reminders) state.reminders = [];
                        if (state.lastCompletedDay && state.lastCompletedDay !== getTodayDateString() && state.lastCompletedDay !== getYesterdayDateString()) state.streak = 0;
                    } else {
                        state.startDate = new Date().toISOString();
                        state.lastLoginDate = getTodayDateString();
                        saveState();
                    }
                } catch(e) { console.error('Error loading state', e); }
            }
            function saveState() {
                try {
                    localStorage.setItem(STORAGE_KEY, JSON.stringify(state));
                    updateUIIndicators();
                } catch(e) { console.error('Error saving state', e); }
            }
            function computeProgress() {
                const total = PLAN_DIARIO.reduce((acc, d) => acc + d.tasks.length, 0);
                const done = Object.values(state.taskStatus).filter(status => status && status.done).length;
                const pct = total ? Math.round((done / total) * 100) : 0;
                return { total, done, pct };
            }
            function handleTaskCompletion(dayNumber) {
                try {
                    const day = PLAN_DIARIO.find(d => d.day === dayNumber);
                    if (!day) return;
                    const allDayTasksDone = day.tasks.every(task => state.taskStatus[task.id] && state.taskStatus[task.id].done);
                    if (!allDayTasksDone) { saveState(); return; }
                    const today = getTodayDateString();
                    if (state.lastCompletedDay === today) { saveState(); return; }
                    const yesterday = getYesterdayDateString();
                    if (state.lastCompletedDay === yesterday) state.streak++;
                    else state.streak = 1;
                    state.lastCompletedDay = today;
                    saveState();
                    try { if (typeof confetti === 'function') confetti({ particleCount: 120, spread: 80, origin: { y: 0.6 }, colors: ['#ec4899', '#fbcfe8', '#fdf2f8', '#e8368f'] }); } catch(e) { console.warn("Confetti error:", e); }
                    if (streakEl) { streakEl.style.transform = 'scale(1.2)'; setTimeout(() => { if (streakEl) streakEl.style.transform = 'scale(1)'; }, 200); }
                } catch(e) { console.error("Error en handleTaskCompletion:", e); }
            }
            function hideAllModals() {
                if (quizView) quizView.classList.add('hidden');
                if (answerView) answerView.classList.add('hidden');
                if (greetingView) greetingView.classList.add('hidden');
                if (reminderView) reminderView.classList.add('hidden');
                if (preTestView) preTestView.classList.add('hidden');
                if (confidenceView) confidenceView.classList.add('hidden');
            }
            function showModal(type = 'quiz', dayIndex = 0) {
                if (!modalBackdrop || !modalTitle) return;
                hideAllModals();
                currentWordIndex = dayIndex; const day = PLAN_DIARIO[currentWordIndex];
                if (type === 'quiz') {
                    modalTitle.textContent = `Palabra del D√≠a ${day.day} (Quiz)`; if (quizWordTrans) quizWordTrans.textContent = `'${day.wordTrans}'`; if (quizInput) quizInput.value = ''; if (quizFeedback) quizFeedback.textContent = ''; if (quizView) quizView.classList.remove('hidden');
                } else if (type === 'answer') {
                    modalTitle.textContent = `Palabra del D√≠a ${day.day}`; if (modalMessage) modalMessage.innerHTML = `<strong class="text-2xl">${escapeHtml(day.word)}</strong> <br> ${escapeHtml(day.wordTrans)}`;
                    if (modalExampleSentence) modalExampleSentence.textContent = day.exampleSentence ? escapeHtml(day.exampleSentence) : '';
                    if (modalExampleTranslation) modalExampleTranslation.textContent = day.exampleTranslation ? escapeHtml(day.exampleTranslation) : '';
                    if (modalExample) modalExample.textContent = `Tema: ${day.title}`;
                    if (answerView) answerView.classList.remove('hidden');
                } else if (type === 'greeting') {
                    modalTitle.textContent = '¬°Guten Tag! ‚òÄÔ∏è'; const msgEl = document.getElementById('greetingMessage');
                    if (msgEl) msgEl.innerHTML = `¬°Bienvenido/a! <br><br> Hoy: <strong>D√≠a ${day.day}</strong> - ${day.title}. <br><br> ¬°Vamos! üí™`;
                    if (greetingView) greetingView.classList.remove('hidden');
                } else if (type === 'reminder') {
                    modalTitle.textContent = 'üîî Notas y Recordatorios';
                    if (reminderView) reminderView.classList.remove('hidden');
                    renderReminders();
                    setTimeout(() => { if (reminderInput) reminderInput.focus(); }, 100);
                } else if (type === 'preTest') {
                    modalTitle.textContent = 'üåü Test de Ubicaci√≥n (A1)';
                    if (preTestView) preTestView.classList.remove('hidden');
                    renderPreTestQuestions();
                } else if (type === 'confidence') {
                    modalTitle.textContent = 'Auto-Evaluaci√≥n de Tarea';
                    if (confidenceView) confidenceView.classList.remove('hidden');
                }
                modalBackdrop.classList.remove('hidden'); modalBackdrop.style.display = 'flex';
            }
            function renderPreTestQuestions() { /* ... implementaci√≥n ... */
                if (!preTestContainer) return;
                preTestContainer.innerHTML = '';
                PRE_TEST_QUESTIONS.forEach(q => {
                    const qDiv = document.createElement('div');
                    qDiv.classList.add('p-3', 'bg-gray-50', 'rounded-lg', 'border', 'border-gray-200');
                    qDiv.innerHTML = `<p class="font-medium mb-2 text-gray-800">${q.id}. ${escapeHtml(q.question)}</p>`;
                    q.options.forEach(option => {
                        const label = document.createElement('label');
                        label.classList.add('flex', 'items-center', 'mt-1', 'text-sm', 'cursor-pointer', 'hover:text-pink-600');
                        label.innerHTML = `<input type="radio" name="q-${q.id}" value="${escapeHtml(option)}" data-id="${q.id}" class="h-4 w-4 text-pink-600 border-gray-300 focus:ring-pink-500"><span class="ml-2 text-gray-700">${escapeHtml(option)}</span>`;
                        qDiv.appendChild(label);
                    });
                    preTestContainer.appendChild(qDiv);
                });
                preTestContainer.querySelectorAll('input[type="radio"]').forEach(input => {
                    input.addEventListener('change', (e) => {
                        const qId = e.target.dataset.id;
                        currentPreTestAnswers[qId] = e.target.value;
                        if (preTestFeedback) preTestFeedback.textContent = '';
                    });
                });
            }
            function submitPreTest() { /* ... implementaci√≥n ... */
                let correctCount = 0;
                const totalQuestions = PRE_TEST_QUESTIONS.length;
                if (Object.keys(currentPreTestAnswers).length < totalQuestions) {
                    if (preTestFeedback) preTestFeedback.textContent = 'Por favor, responde todas las preguntas.';
                    return;
                }
                PRE_TEST_QUESTIONS.forEach(q => { if (currentPreTestAnswers[q.id] === q.answer) { correctCount++; } });
                const percentage = (correctCount / totalQuestions) * 100;
                let suggestedDay = 1;
                let message = `Respuestas correctas: ${correctCount} de ${totalQuestions} (${Math.round(percentage)}%).`;
                if (percentage >= 80) suggestedDay = 9;
                else if (percentage >= 50) suggestedDay = 4;
                message += ` ¬°Te sugerimos comenzar en el **D√≠a ${suggestedDay}**!`;
                if (preTestFeedback) preTestFeedback.innerHTML = `<p class="text-green-600 font-bold">${message}</p>`;
                state.preTestDone = true;
                saveState();
                setTimeout(() => {
                    currentlyDisplayedDay = suggestedDay;
                    renderSingleDay(currentlyDisplayedDay);
                    if (modalBackdrop) { modalBackdrop.classList.add('hidden'); modalBackdrop.style.display = 'none'; }
                }, 2000);
            }
            function showConfidenceModal(taskId) {
                currentTaskForConfidence = taskId;
                showModal('confidence', 0);
            }
            function setConfidence(level) {
                if (!currentTaskForConfidence) return;
                const taskId = currentTaskForConfidence;
                const dayNumber = Number(taskId.split('-')[0].replace('d', ''));
                state.taskStatus[taskId] = { done: true, confidence: level };
                if (modalBackdrop) { modalBackdrop.classList.add('hidden'); modalBackdrop.style.display = 'none'; }
                renderSingleDay(currentlyDisplayedDay);
                handleTaskCompletion(dayNumber);
                currentTaskForConfidence = null;
            }
            function updateStaticUI(day) { if (headerDayDisplay) { headerDayDisplay.textContent = `D√≠a ${day.day} / 30`; } if (wodTitle) wodTitle.textContent = `Wort des Tages (D√≠a ${day.day})`; if (wodWord) wodWord.textContent = day.word; if (wodTranslation) wodTranslation.textContent = day.wordTrans; if (wodPlural) { if (day.plural && day.plural !== day.word) { wodPlural.textContent = `Plural: ${day.plural}`; wodPlural.classList.remove('hidden'); } else { wodPlural.classList.add('hidden'); } } }
            function updateDayStatus(dayNumber) {
                const day = PLAN_DIARIO.find(d => d.day === dayNumber);
                if (!day) return;
                const total = day.tasks.length;
                const done = day.tasks.filter(t => state.taskStatus[t.id] && state.taskStatus[t.id].done).length;
                const dayArticle = document.getElementById(`day-article-${dayNumber}`);
                if (!dayArticle) return;
                const statusEl = dayArticle.querySelector('.day-status');
                if (statusEl) {
                    statusEl.textContent = `${done}/${total} ‚úì`;
                    if (done === total && total > 0) { statusEl.textContent = '‚úì Completo'; statusEl.classList.add('text-green-600', 'font-semibold'); }
                    else { statusEl.classList.remove('text-green-600', 'font-semibold'); }
                }
            }
            function toggleTaskVisual(inputEl, labelSpan, taskId) {
                if (!labelSpan) return;
                const status = state.taskStatus[taskId];
                if (status && status.done) {
                    labelSpan.classList.add('task-done');
                    inputEl.checked = true;
                } else {
                    labelSpan.classList.remove('task-done');
                    inputEl.checked = false;
                }
            }
            function getActiveDay() { let activeDay = 1; if (state.startDate) { const start = new Date(state.startDate); start.setHours(0,0,0,0); const today = new Date(); today.setHours(0,0,0,0); const diffTime = Math.abs(today - start); const diffDays = Math.round(diffTime / (1000 * 60 * 60 * 24)); activeDay = diffDays + 1; } return Math.min(activeDay, PLAN_DIARIO.length); }
            function fillJumpDaySelect() { if (!jumpDaySelect) return; jumpDaySelect.innerHTML = '<option value="">Ir a d√≠a...</option>'; PLAN_DIARIO.forEach(d => { const opt = document.createElement('option'); opt.value = String(d.day); opt.textContent = `D√≠a ${d.day}: ${d.title}`; jumpDaySelect.appendChild(opt); }); }
            function updateNavigationButtons() { if (!prevDayBtn || !nextDayBtn || !currentDayDisplay) return; currentDayDisplay.textContent = `D√≠a ${currentlyDisplayedDay} / ${PLAN_DIARIO.length}`; prevDayBtn.disabled = currentlyDisplayedDay <= 1; nextDayBtn.disabled = currentlyDisplayedDay >= PLAN_DIARIO.length; }
            function updateUIIndicators() { const { pct } = computeProgress(); if (progressPercentEl) { progressPercentEl.textContent = `${pct}%`; } if (streakEl) { streakEl.textContent = `${state.streak || 0} D√≠as üî•`; } if (progressBar) { progressBar.style.width = `${pct}%`; } }
            function loadJournalForDay(dayNumber = 1) { const key = `day-${dayNumber}`; const val = state.journalEntries?.[key] || ''; if (journalText) journalText.value = val; const day = PLAN_DIARIO.find(d => d.day === dayNumber); if (journalText && day && day.journalPrompt) journalText.placeholder = day.journalPrompt; else if (journalText) journalText.placeholder = 'Escribe tus frases...'; if(journalCurrentDaySpan) journalCurrentDaySpan.textContent = dayNumber; }
            function fillJournalDaySelect() { if (!journalDaySelect) return; journalDaySelect.innerHTML = ''; PLAN_DIARIO.forEach(d => { const opt = document.createElement('option'); opt.value = String(d.day); opt.textContent = `D√≠a ${d.day}: ${d.title}`; journalDaySelect.appendChild(opt); }); }
            function speakGerman(text) {
                 if (!window.speechSynthesis || !text) return;
                 window.speechSynthesis.cancel();
                 const utterance = new SpeechSynthesisUtterance(text);
                 utterance.lang = 'de-DE';
                 utterance.rate = 0.95;
                 window.speechSynthesis.speak(utterance);
            }
            function setupTabListeners(dayArticle) {
                const tabButtons = dayArticle.querySelectorAll('.tab-button');
                const tabContents = dayArticle.querySelectorAll('.tab-content');
                tabButtons.forEach(button => {
                    button.addEventListener('click', () => {
                        const targetTab = button.dataset.tab;
                        tabButtons.forEach(btn => btn.classList.remove('active'));
                        tabContents.forEach(content => content.classList.add('hidden'));
                        button.classList.add('active');
                        dayArticle.querySelector(`.${targetTab}-tab`).classList.remove('hidden');
                    });
                });
            }
            function renderReminders() {
                if (!reminderList) return;
                reminderList.innerHTML = '';
                if (!state.reminders || state.reminders.length === 0) {
                    reminderList.innerHTML = '<li class="text-gray-500 italic text-sm p-2 rounded-md bg-gray-50">No hay notas guardadas.</li>';
                    return;
                }
                state.reminders.forEach((note, index) => {
                    const li = document.createElement('li');
                    li.classList.add('flex', 'justify-between', 'items-start', 'p-2', 'bg-gray-50', 'rounded-md', 'border-l-4', 'border-pink-400');
                    li.innerHTML = `<span class="text-sm text-gray-800 break-words pr-2 flex-1">${escapeHtml(note.text)}</span><button data-index="${index}" class="delete-reminder-btn text-red-500 hover:text-red-700 text-xs flex-shrink-0 ml-2" title="Eliminar">üóëÔ∏è</button>`;
                    reminderList.appendChild(li);
                });
                reminderList.querySelectorAll('.delete-reminder-btn').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const index = Number(e.target.dataset.index);
                        deleteReminder(index);
                    });
                });
            }
            function deleteReminder(index) {
                if (index >= 0 && index < state.reminders.length) {
                    state.reminders.splice(index, 1);
                    saveState();
                    renderReminders();
                }
            }
            function addReminder() {
                if (!reminderInput || !reminderView) return;
                const text = reminderInput.value.trim();
                if (text) {
                    state.reminders.push({ text: text, timestamp: Date.now() });
                    reminderInput.value = '';
                    saveState();
                    renderReminders();
                    reminderView.classList.add('shake-anim');
                    setTimeout(() => reminderView.classList.remove('shake-anim'), 300);
                } else {
                    if (reminderInput) reminderInput.focus();
                }
            }
            function renderSingleDay(dayNumber) {
                if (!daysContainer || !dayTemplate || !taskTemplate) return;
                daysContainer.innerHTML = '';
                const day = PLAN_DIARIO.find(d => d.day === dayNumber);
                if (!day) { daysContainer.innerHTML = `<p class="text-red-500">Error: D√≠a ${dayNumber} no encontrado.</p>`; return; }
                currentlyDisplayedDay = dayNumber;
                updateStaticUI(day);
                const dayClone = dayTemplate.content.cloneNode(true);
                const dayArticle = dayClone.querySelector('article');
                if(dayArticle) dayArticle.id = `day-article-${day.day}`;
                dayClone.querySelector('.day-title').textContent = `üìÖ D√≠a ${day.day}: ${escapeHtml(day.title)}`;
                dayClone.querySelector('.day-word').innerHTML = `Palabra clave: <strong>${escapeHtml(day.word)}</strong>`;
                const lessonContentDiv = dayClone.querySelector('.lesson-content');
                if (lessonContentDiv) { lessonContentDiv.innerHTML = day.lessonContent || `<h3>Contenido No Disponible</h3><p>A√∫n no se ha a√±adido la lecci√≥n para este d√≠a. Por favor, consulta los objetivos y tareas.</p>`; }
                const taskListUl = dayClone.querySelector('.task-list');
                day.tasks.forEach(task => {
                    const taskClone = taskTemplate.content.cloneNode(true);
                    const taskCheckbox = taskClone.querySelector('.task-checkbox');
                    const taskLabel = taskClone.querySelector('.task-label');
                    const taskId = task.id;
                    const status = state.taskStatus[taskId] || { done: false, confidence: 0 };
                    if(taskClone.querySelector('.task-item')) taskClone.querySelector('.task-item').classList.add(task.color);
                    taskClone.querySelector('.task-icon').textContent = escapeHtml(task.icon);
                    taskClone.querySelector('.task-desc').textContent = escapeHtml(task.desc);
                    taskClone.querySelector('.task-time').textContent = `(${escapeHtml(task.time)})`;
                    toggleTaskVisual(taskCheckbox, taskLabel, taskId);
                    if (taskCheckbox) {
                        taskCheckbox.addEventListener('change', (e) => {
                            if (e.target.checked) {
                                e.target.checked = false;
                                showConfidenceModal(taskId);
                            } else {
                                state.taskStatus[taskId] = { done: false, confidence: 0 };
                                toggleTaskVisual(e.target, taskLabel, taskId);
                                handleTaskCompletion(day.day);
                            }
                        });
                    }
                    if(taskListUl) taskListUl.appendChild(taskClone);
                });
                const journalBtn = dayClone.querySelector('.journal-focus-btn');
                if (journalBtn) { journalBtn.addEventListener('click', () => {
                    if (journalDaySelect) journalDaySelect.value = String(day.day);
                    loadJournalForDay(day.day);
                    if (journalText) { journalText.focus(); window.scrollTo({ top: journalText.offsetTop - 60, behavior: 'smooth' }); }
                }); }
                daysContainer.appendChild(dayClone);
                setupTabListeners(document.getElementById(`day-article-${day.day}`));
                updateDayStatus(day.day);
                updateNavigationButtons();
                if (journalDaySelect) journalDaySelect.value = String(dayNumber);
                loadJournalForDay(dayNumber);
                if (journalCurrentDaySpan) journalCurrentDaySpan.textContent = dayNumber;
            }
            function initializeApp() {
                getElements();
                loadState();
                fillJournalDaySelect();
                fillJumpDaySelect();
                currentlyDisplayedDay = getActiveDay();
                renderSingleDay(currentlyDisplayedDay);
                setupEventListeners();
                const today = getTodayDateString();
                if (state.lastLoginDate !== today) {
                    state.lastLoginDate = today;
                    if (!state.preTestDone) {
                        setTimeout(() => { showModal('preTest', 0); }, 100);
                    } else {
                        setTimeout(() => { showModal('greeting', currentlyDisplayedDay - 1); }, 100);
                    }
                    saveState();
                }
            }
            function setupEventListeners() {
                if (confidenceView) { confidenceView.querySelectorAll('.confidence-btn').forEach(button => { button.addEventListener('click', (e) => { const level = Number(e.target.dataset.level); setConfidence(level); }); }); }
                if (submitPreTestBtn) submitPreTestBtn.addEventListener('click', submitPreTest);
                if (prevDayBtn) prevDayBtn.addEventListener('click', () => { if (currentlyDisplayedDay > 1) { renderSingleDay(currentlyDisplayedDay - 1); } });
                if (nextDayBtn) nextDayBtn.addEventListener('click', () => { if (currentlyDisplayedDay < PLAN_DIARIO.length) { renderSingleDay(currentlyDisplayedDay + 1); } });
                if (goDayBtn) goDayBtn.addEventListener('click', () => { const v = jumpDaySelect.value; if (!v) return; renderSingleDay(Number(v)); });
                if (journalDaySelect) journalDaySelect.addEventListener('change', () => { loadJournalForDay(Number(journalDaySelect.value)); });
                if (saveJournalBtn) saveJournalBtn.addEventListener('click', () => { const dayNumber = Number(journalDaySelect.value || 1); const key = `day-${dayNumber}`; state.journalEntries[key] = journalText.value; saveState(); saveJournalBtn.textContent = '¬°Guardado!'; setTimeout(() => { if(saveJournalBtn) saveJournalBtn.textContent = 'Guardar'; }, 1500); });
                let autosaveTimer = null;
                if (journalText) {
                    journalText.addEventListener('input', () => {
                        clearTimeout(autosaveTimer);
                        if (autosaveNotice) autosaveNotice.textContent = 'Escribiendo...';
                        autosaveTimer = setTimeout(() => {
                            const dayNumber = Number(journalDaySelect.value || 1);
                            const key = `day-${dayNumber}`;
                            state.journalEntries[key] = journalText.value;
                            saveState();
                            if (autosaveNotice) autosaveNotice.textContent = `Guardado: ${new Date().toLocaleTimeString()}`;
                        }, 1400);
                    });
                }
                if (resetProgressBtn) resetProgressBtn.addEventListener('click', () => { if (!confirm('¬øSeguro que quieres resetear todo el progreso?')) return; state = { taskStatus: {}, journalEntries: {}, streak: 0, lastCompletedDay: null, startDate: new Date().toISOString(), lastLoginDate: getTodayDateString(), reminders: [], preTestDone: false }; saveState(); currentlyDisplayedDay = 1; renderSingleDay(currentlyDisplayedDay); loadJournalForDay(1); });
                if (exportStateBtn) exportStateBtn.addEventListener('click', () => { const data = JSON.stringify(state, null, 2); const blob = new Blob([data], { type: 'application/json' }); const url = URL.createObjectURL(blob); const a = document.createElement('a'); a.href = url; a.download = 'germanA1_progress.json'; a.click(); URL.revokeObjectURL(url); });
                if (importStateBtn) importStateBtn.addEventListener('click', () => importFileInput.click()); if (importFileInput) importFileInput.addEventListener('change', (ev) => { const file = ev.target.files?.[0]; if (!file) return; const reader = new FileReader(); reader.onload = (e) => { try { const parsed = JSON.parse(e.target.result); if (confirm('¬øImportar? Esto sobrescribir√° tu progreso actual.')) {
                    state.taskStatus = parsed.taskStatus || {}; state.journalEntries = parsed.journalEntries || {}; state.streak = parsed.streak || 0; state.lastCompletedDay = parsed.lastCompletedDay || null; state.startDate = parsed.startDate || new Date().toISOString(); state.lastLoginDate = parsed.lastLoginDate || null; state.reminders = parsed.reminders || []; state.preTestDone = parsed.preTestDone || false;
                    saveState();
                    currentlyDisplayedDay = getActiveDay();
                    renderSingleDay(currentlyDisplayedDay);
                    loadJournalForDay(currentlyDisplayedDay);
                    showModal('greeting', 0); if (modalTitle) modalTitle.textContent = 'Importado'; const msgEl = document.getElementById('greetingMessage'); if (msgEl) msgEl.textContent = 'Progreso importado.';
                } } catch(err) { alert('Archivo inv√°lido'); } }; reader.readAsText(file); ev.target.value = null; });
                if (openWordOfDayBtn) openWordOfDayBtn.addEventListener('click', () => { showModal('quiz', currentlyDisplayedDay - 1); setTimeout(() => { if (quizInput) quizInput.focus(); }, 100); });
                if (checkAnswerBtn) checkAnswerBtn.addEventListener('click', () => { const day = PLAN_DIARIO[currentWordIndex]; const userAnswer = quizInput.value.trim().toLowerCase(); const correctAnswer = day.word.toLowerCase();
                    if (userAnswer === correctAnswer) { quizFeedback.textContent = '¬°Super!'; quizFeedback.classList.remove('text-red-500'); quizFeedback.classList.add('text-green-600'); try { if (typeof confetti === 'function') confetti({ particleCount: 50, spread: 40, origin: { y: 0.7 }, colors: ['#ec4899', '#a855f7'] }); } catch(e) { console.warn("Confetti fall√≥", e); } setTimeout(() => showModal('answer', currentWordIndex), 1000); }
                    else { quizFeedback.textContent = 'Casi...'; quizFeedback.classList.add('text-red-500'); quizFeedback.classList.remove('text-green-600'); if (modal) modal.classList.add('shake-anim'); setTimeout(() => { if (modal) modal.classList.remove('shake-anim'); }, 300); }
                });
                if (openReminderModalBtn) openReminderModalBtn.addEventListener('click', () => { showModal('reminder', currentlyDisplayedDay - 1); });
                if (addReminderBtn) addReminderBtn.addEventListener('click', addReminder);
                if (reminderInput) reminderInput.addEventListener('keypress', (e) => { if (e.key === 'Enter') { addReminder(); } });
                if (closeReminderModal) closeReminderModal.addEventListener('click', () => { if (modalBackdrop) { modalBackdrop.classList.add('hidden'); modalBackdrop.style.display = 'none'; } });
                if (closeModalBtn) closeModalBtn.addEventListener('click', () => { if (modalBackdrop) { modalBackdrop.classList.add('hidden'); modalBackdrop.style.display = 'none'; } });
                if (closeGreetingBtn) closeGreetingBtn.addEventListener('click', () => { if (modalBackdrop) { modalBackdrop.classList.add('hidden'); modalBackdrop.style.display = 'none'; } });
                if (modalBackdrop) modalBackdrop.addEventListener('click', (e) => { if (e.target === modalBackdrop) { modalBackdrop.classList.add('hidden'); modalBackdrop.style.display = 'none'; } });
                window.addEventListener('beforeunload', saveState);
            }
            document.addEventListener('DOMContentLoaded', initializeApp);
        })(); // Fin IIFE
    </script>
</body>
</html>
